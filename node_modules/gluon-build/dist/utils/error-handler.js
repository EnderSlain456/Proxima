"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.errorHandler = void 0;
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
const chalk_1 = __importDefault(require("chalk"));
const fs_1 = require("fs");
const path_1 = require("path");
const constants_1 = require("../constants");
const log_1 = require("../log");
const errorHandler = (err, isUnhandledRej) => {
    var _a;
    let cc = (0, fs_1.readFileSync)((0, path_1.resolve)(constants_1.MELON_DIR, 'command')).toString();
    cc = cc.replace(/(\r\n|\n|\r)/gm, '');
    console.log(`\n   ${chalk_1.default.redBright.bold('ERROR')} An error occurred while running command ["${cc
        .split(' ')
        .join('", "')}"]:`);
    console.log(`\n\t`, isUnhandledRej
        ? err.toString().replace(/\n/g, '\n\t ')
        : err.message.replace(/\n/g, '\n\t '));
    if (err.stack || isUnhandledRej) {
        const stack = (_a = err.stack) === null || _a === void 0 ? void 0 : _a.split('\n');
        if (!stack)
            return;
        stack.shift();
        stack.shift();
        console.log(`\t`, stack
            .join('\n')
            .replace(/(\r\n|\n|\r)/gm, '')
            .replace(/ {4}at /g, '\n\t â€¢ '));
    }
    console.log();
    log_1.log.info('Exiting due to error.');
    process.exit(1);
};
exports.errorHandler = errorHandler;
