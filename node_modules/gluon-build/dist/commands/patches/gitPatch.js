"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.apply = void 0;
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
const execa_1 = __importDefault(require("execa"));
const constants_1 = require("../../constants");
async function apply(path) {
    try {
        await (0, execa_1.default)('git', ['apply', '-R', ...constants_1.PATCH_ARGS, path], {
            cwd: constants_1.ENGINE_DIR,
        });
    }
    catch (_e) {
        // If the patch has already been applied, we want to revert it. Because
        // there is no good way to check this we are just going to catch and
        // discard the error
        null;
    }
    const { stdout, exitCode } = await (0, execa_1.default)('git', ['apply', ...constants_1.PATCH_ARGS, path], { cwd: constants_1.ENGINE_DIR });
    if (exitCode != 0)
        throw stdout;
}
exports.apply = apply;
