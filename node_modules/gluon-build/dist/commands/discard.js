"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.discard = void 0;
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
const execa_1 = __importDefault(require("execa"));
const fs_1 = require("fs");
const path_1 = require("path");
const log_1 = require("../log");
const constants_1 = require("../constants");
const discard = async (file) => {
    const realFile = (0, path_1.resolve)(constants_1.ENGINE_DIR, file);
    log_1.log.info(`Discarding ${file}...`);
    if (!(0, fs_1.existsSync)(realFile))
        throw new Error(`File ${file} does not exist`);
    if (!(0, fs_1.statSync)(realFile).isFile())
        throw new Error('Target must be a file.');
    try {
        await (0, execa_1.default)('git', ['restore', file], { cwd: constants_1.ENGINE_DIR });
    }
    catch (e) {
        log_1.log.warning(`The file ${file} was not changed`);
    }
};
exports.discard = discard;
