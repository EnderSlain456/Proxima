"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.exportFile = exports.getPatchName = void 0;
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
const execa_1 = __importDefault(require("execa"));
const fs_1 = require("fs");
const path_1 = require("path");
const log_1 = require("../log");
const constants_1 = require("../constants");
const utils_1 = require("../utils");
const getPatchName = (file) => `${(0, path_1.basename)(file).replace(/\./g, '-')}.patch`;
exports.getPatchName = getPatchName;
const exportFile = async (file) => {
    log_1.log.info(`Exporting ${file}...`);
    if (!(0, fs_1.existsSync)((0, path_1.resolve)(constants_1.ENGINE_DIR, file)))
        throw new Error(`File ${file} could not be found in engine directory. Check the path for any mistakes and try again.`);
    const proc = await (0, execa_1.default)('git', [
        'diff',
        '--src-prefix=a/',
        '--dst-prefix=b/',
        '--full-index',
        (0, path_1.resolve)(constants_1.ENGINE_DIR, file),
    ], {
        cwd: constants_1.ENGINE_DIR,
        stripFinalNewline: false,
    });
    const name = (0, exports.getPatchName)(file);
    const patchPath = file.replace(/\./g, '-').split('/').slice(0, -1);
    await (0, utils_1.ensureDir)((0, path_1.resolve)(constants_1.SRC_DIR, ...patchPath));
    if (proc.stdout.length >= 8000) {
        log_1.log.warning('');
        log_1.log.warning(`Exported patch is over 8000 characters. This patch may become hard to manage in the future.`);
        log_1.log.warning(`We recommend trying to decrease your patch size by making minimal edits to the source.`);
        log_1.log.warning('');
        await (0, utils_1.delay)(2000);
    }
    (0, fs_1.writeFileSync)((0, path_1.resolve)(constants_1.SRC_DIR, ...patchPath, name), proc.stdout);
    log_1.log.info(`Wrote "${name}" to patches directory.`);
    console.log();
};
exports.exportFile = exportFile;
